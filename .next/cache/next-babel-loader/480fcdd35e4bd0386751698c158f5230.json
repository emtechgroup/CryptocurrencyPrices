{"ast":null,"code":"var _jsxFileName = \"/Users/anthonypafundi/Desktop/cmc-clone/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport styles from '../styles/Home.module.css';\nimport CoinGecko from 'coingecko-api';\nconst coinGeckoClient = new CoinGecko();\nexport default function Home(props) {\n  const {\n    data\n  } = props.result;\n\n  const formatPercent = number => `${new Number(number).toFixed(2)}%`;\n\n  const formatDollar = (number, maximumSignificantDigits) => new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    maximumSignificantDigits\n  }).format(number);\n\n  const addRowNumberColumn = () => {\n    if (!_.find(columns, {\n      id: 'row_number'\n    })) {\n      columns.unshift({\n        id: 'row_number',\n        width: 50,\n        filterable: false,\n        disableSortBy: true\n      });\n    }\n  };\n\n  addRowNumberColumn();\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"Coinmarketcap clone\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Coinmarketcap clone\"), __jsx(\"table\", {\n    className: \"h7vnx2-2 czTsgW cmc-table table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, __jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"#\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Symbol\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"24H Change\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Price\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Market cap\"))), __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, data.map(coin => __jsx(\"tr\", {\n    key: coin.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, rowNumberCell ? index + 1 : cell.render('Cell')), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, __jsx(\"img\", {\n    src: coin.image,\n    style: {\n      width: 25,\n      height: 25,\n      marginRight: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }), coin.symbol.toUpperCase()), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    className: coin.price_change_percentage_24h > 0 ? 'text-success' : 'text-danger',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, formatPercent(coin.price_change_percentage_24h))), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, formatDollar(coin.current_price, 20)), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, formatDollar(coin.market_cap, 12)))))));\n}\nexport async function getServerSideProps(context) {\n  const params = {\n    order: CoinGecko.ORDER.MARKET_CAP_DESC\n  };\n  const result = await coinGeckoClient.coins.markets({\n    params\n  });\n  return {\n    props: {\n      result\n    }\n  };\n}","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/cmc-clone/pages/index.js"],"names":["Head","styles","CoinGecko","coinGeckoClient","Home","props","data","result","formatPercent","number","Number","toFixed","formatDollar","maximumSignificantDigits","Intl","NumberFormat","style","currency","format","addRowNumberColumn","_","find","columns","id","unshift","width","filterable","disableSortBy","container","map","coin","rowNumberCell","index","cell","render","image","height","marginRight","symbol","toUpperCase","price_change_percentage_24h","current_price","market_cap","getServerSideProps","context","params","order","ORDER","MARKET_CAP_DESC","coins","markets"],"mappings":"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","sourcesContent":["import Head from 'next/head'\nimport styles from '../styles/Home.module.css'\nimport CoinGecko from 'coingecko-api';\nconst coinGeckoClient = new CoinGecko();\n\nexport default function Home(props) {\n  const { data } = props.result;\n\n  const formatPercent = number => \n    `${new Number(number).toFixed(2)}%`\n\n  const formatDollar = (number, maximumSignificantDigits) =>\n    new Intl.NumberFormat(\n      'en-US', \n      { \n        style: 'currency', \n        currency: 'USD',\n        maximumSignificantDigits\n      })\n      .format(number);\n\n      const addRowNumberColumn = () => {\n        if (!_.find(columns, { id: 'row_number' })) {\n          columns.unshift({\n            id: 'row_number',\n            width: 50,\n            filterable: false,\n            disableSortBy: true,\n          });\n        }\n      };\n      addRowNumberColumn();\n\n  return (\n    <div className={styles.container}>\n      <Head>\n        <title>Coinmarketcap clone</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n\n      <h1>Coinmarketcap clone</h1>\n\n      <table className=\"h7vnx2-2 czTsgW cmc-table table\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Symbol</th>\n            <th>24H Change</th>\n            <th>Price</th>\n            <th>Market cap</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map(coin => (\n            <tr key={coin.id}>\n              <td>\n              {rowNumberCell ? index + 1 : cell.render('Cell')}\n              </td>\n              <td>\n                <img \n                  src={coin.image} \n                  style={{width: 25, height: 25, marginRight: 10}} \n                />\n                {coin.symbol.toUpperCase()}\n              </td>\n              <td> \n                <span\n                  className={coin.price_change_percentage_24h > 0 ? (\n                    'text-success' \n                  ) : 'text-danger'}\n                >\n                {formatPercent(coin.price_change_percentage_24h)}\n                </span>\n              </td>\n              <td>{formatDollar(coin.current_price, 20)}</td>\n              <td>{formatDollar(coin.market_cap, 12)}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n    </div>\n  )\n}\n\nexport async function getServerSideProps(context) {\n  const params = {\n    order: CoinGecko.ORDER.MARKET_CAP_DESC\n  };\n  const result = await coinGeckoClient.coins.markets({params});\n  return {\n    props: {\n      result\n    },\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}