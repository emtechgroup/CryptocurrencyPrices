{"ast":null,"code":"var _jsxFileName = \"/Users/anthonypafundi/Desktop/cmc-clone/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport styles from '../styles/Home.module.css';\nexport var __N_SSP = true;\nexport default function Home(props) {\n  var _this = this;\n\n  var data = props.result.data;\n\n  var formatPercent = function formatPercent(number) {\n    return \"\".concat(new Number(number).toFixed(2), \"%\");\n  };\n\n  var formatDollar = function formatDollar(number, maximumSignificantDigits) {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      maximumSignificantDigits: maximumSignificantDigits\n    }).format(number);\n  };\n\n  function indexNum(cell, row, enumObject, index) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, index + 1);\n  }\n\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Coinmarketcap clone\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  })), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Coinmarketcap clone\"), __jsx(\"table\", {\n    className: \"h7vnx2-2 czTsgW cmc-table table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, __jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"#\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Symbol\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"24H Change\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Price\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Market cap\"))), __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, data.map(function (coin) {\n    return __jsx(\"tr\", {\n      key: coin.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }), __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, __jsx(\"img\", {\n      src: coin.image,\n      style: {\n        width: 25,\n        height: 25,\n        marginRight: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }), coin.symbol.toUpperCase()), __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      className: coin.price_change_percentage_24h > 0 ? 'text-success' : 'text-danger',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, formatPercent(coin.price_change_percentage_24h))), __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, formatDollar(coin.current_price, 20)), __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, formatDollar(coin.market_cap, 12)));\n  }))));\n}\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/anthonypafundi/Desktop/cmc-clone/pages/index.js"],"names":["Head","styles","Home","props","data","result","formatPercent","number","Number","toFixed","formatDollar","maximumSignificantDigits","Intl","NumberFormat","style","currency","format","indexNum","cell","row","enumObject","index","container","map","coin","id","image","width","height","marginRight","symbol","toUpperCase","price_change_percentage_24h","current_price","market_cap"],"mappings":"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","sourcesContent":["import Head from 'next/head'\nimport styles from '../styles/Home.module.css'\nimport CoinGecko from 'coingecko-api';\nconst coinGeckoClient = new CoinGecko();\n\nexport default function Home(props) {\n  const { data } = props.result;\n\n  const formatPercent = number => \n    `${new Number(number).toFixed(2)}%`\n\n  const formatDollar = (number, maximumSignificantDigits) =>\n    new Intl.NumberFormat(\n      'en-US', \n      { \n        style: 'currency', \n        currency: 'USD',\n        maximumSignificantDigits\n      })\n      .format(number);\n\n  function indexNum(cell, row, enumObject, index) {\n    return (<div>{index+1}</div>) \n}\n\n  return (\n    <div className={styles.container}>\n      <Head>\n        <title>Coinmarketcap clone</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n\n      <h1>Coinmarketcap clone</h1>\n\n      <table className=\"h7vnx2-2 czTsgW cmc-table table\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Symbol</th>\n            <th>24H Change</th>\n            <th>Price</th>\n            <th>Market cap</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map(coin => (\n            <tr key={coin.id}>\n              <td>\n                \n              </td>\n              <td>\n                <img \n                  src={coin.image} \n                  style={{width: 25, height: 25, marginRight: 10}} \n                />\n                {coin.symbol.toUpperCase()}\n              </td>\n              <td> \n                <span\n                  className={coin.price_change_percentage_24h > 0 ? (\n                    'text-success' \n                  ) : 'text-danger'}\n                >\n                {formatPercent(coin.price_change_percentage_24h)}\n                </span>\n              </td>\n              <td>{formatDollar(coin.current_price, 20)}</td>\n              <td>{formatDollar(coin.market_cap, 12)}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n    </div>\n  )\n}\n\nexport async function getServerSideProps(context) {\n  const params = {\n    order: CoinGecko.ORDER.MARKET_CAP_DESC\n  };\n  const result = await coinGeckoClient.coins.markets({params});\n  return {\n    props: {\n      result\n    },\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}